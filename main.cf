vmHB1 = ip::Host(name = "vmhb1", os = "fedora-18", ip = "172.16.32.9")
vmHB2 = ip::Host(name = "vmhb2", os = "fedora-18", ip = "172.16.32.10")
vmHB3 = ip::Host(name = "vmhb3", os = "fedora-18", ip = "172.16.32.11")
vmHB4 = ip::Host(name = "vmhb4", os = "fedora-18", ip = "172.16.32.12")
vmHB5 = ip::Host(name = "vmhb5", os = "fedora-18", ip = "172.16.32.13")

vmMDB1 = ip::Host(name = "vmmdb1", os = "fedora-18", ip = "172.16.32.4")
vmMDB2 = ip::Host(name = "vmmdb2", os = "fedora-18", ip = "172.16.32.5")
vmMDB3 = ip::Host(name = "vmmdb3", os = "fedora-18", ip = "172.16.32.6")
vmMDB4 = ip::Host(name = "vmmdb4", os = "fedora-18", ip = "172.16.32.7")
vmMDB5 = ip::Host(name = "vmmdb5", os = "fedora-18", ip = "172.16.32.8")

vmPG1 = ip::Host(name = "vmpg1", os = "fedora-18", ip = "172.16.32.14")
vmPG2 = ip::Host(name = "vmpg2", os = "fedora-18", ip = "172.16.32.15")
vmPG3 = ip::Host(name = "vmpg3", os = "fedora-18", ip = "172.16.32.16")

vmYCSB = ip::Host(name = "ycsb", os = "fedora-18", ip = "172.16.32.2")

vmYCSB2 = ip::Host(name = "ycsb-2", os = "fedora-18", ip = "172.16.32.17")
## HBASE ##
hbaseHost1 = hbase::HBaseBasic(host = vmHB1)
hbaseHost2 = hbase::HBaseBasic(host = vmHB2)
hbaseHost3 = hbase::HBaseBasic(host = vmHB3)
hbaseHost4 = hbase::HBaseBasic(host = vmHB4)
hbaseHost5 = hbase::HBaseBasic(host = vmHB5)

master = hbase::HBaseMaster(host = hbaseHost1)
master2 = hbase::HBaseMaster(host = hbaseHost4)
region1 = hbase::HBaseRegion(host = hbaseHost2)
region2 = hbase::HBaseRegion(host = hbaseHost3)
region3 = hbase::HBaseRegion(host = hbaseHost5)

dataNode1 = hbase::HadoopDataHDFS(host=hbaseHost2)
dataNode2 = hbase::HadoopDataHDFS(host = hbaseHost3)
dataNode3 = hbase::HadoopDataHDFS(host = hbaseHost5)

zookeeper = hbase::Zookeeper(host = hbaseHost4)
hdfs = hbase::HadoopHDFS(host = hbaseHost4, dataNodes=[dataNode1, dataNode2, dataNode3])

hbaseCluster = hbase::HBaseCluster(masters=[master, master2], regions=[region1, region2, region3], zookeepers = zookeeper, hdfs = hdfs)

## MongoDB ## 
mongo1 = mongodb::MongoDB(host = vmMDB1)
mongo2 = mongodb::MongoDB(host = vmMDB2)
mongo3 = mongodb::MongoDB(host = vmMDB3)
mongo4 = mongodb::MongoDB(host = vmMDB4)
mongo5 = mongodb::MongoDB(host = vmMDB5)

mongo1Server = mongodb::MongoDBServer(host=vmMDB1)
mongo2Server = mongodb::MongoDBServer(host=vmMDB2)
mongo3Server = mongodb::MongoDBServer(host=vmMDB3)
mongo4Server = mongodb::MongoDBServer(host=vmMDB4)
mongo5Server = mongodb::MongoDBServer(host=vmMDB5)


mongoN1 = mongodb::MongoDBNode(host=mongo1, server=mongo1Server, datadir = "/dev/vdc/mongod")
mongoN2 = mongodb::MongoDBNode(host=mongo2, server=mongo2Server, datadir = "/dev/vdc/mongod")
mongoN3 = mongodb::MongoDBNode(host=mongo3, server=mongo3Server, datadir = "/dev/vdc/mongod")
mongoN4 = mongodb::MongoDBNode(host=mongo4, server=mongo4Server, datadir = "/dev/vdc/mongod")
mongoN5 = mongodb::MongoDBNode(host=mongo5, server=mongo5Server, datadir = "/dev/vdc/mongod")


set1 = mongodb::MongoDBReplicaSet(name="repl1", nodes = [mongoN1, mongoN2, mongoN3])
set2 = mongodb::MongoDBReplicaSet(name="repl2", nodes = [mongoN4, mongoN5])

controller1 = mongodb::MongoDBReplicaSetController(host=mongo1, replicaSet = set1, connectingNode = mongoN1)
controller2 = mongodb::MongoDBReplicaSetController(host=mongo4, replicaSet = set2, connectingNode = mongoN4)

mongoDBCluster = mongodb::MongoDBShardCluster(replicaSets = [set1, set2])
shardController = mongodb::MongoDBShardController(host=mongo5, accessServer = access3, shardCluster = mongoDBCluster)

access1 = mongodb::MongoDBAccessServer(host=mongo2, server= mongo2Server, shardCluster = mongoDBCluster)
access2 = mongodb::MongoDBAccessServer(host=mongo3, server= mongo3Server, shardCluster = mongoDBCluster)
access3 = mongodb::MongoDBAccessServer(host=mongo4, server= mongo4Server, shardCluster = mongoDBCluster)

config1 = mongodb::MongoDBConfigServer(host=mongo2, server= mongo2Server, shardCluster = mongoDBCluster)

database1 = mongodb::MongoDBDatabase(name="testdb", shardCluster = mongoDBCluster)
collection1 = mongodb::MongoDBCollection(name="testcol", database = database1)
key1 = mongodb::MongoDBKey(name = "_id", valueString = "hashed", collection = collection1)

databaseYCSB = mongodb::MongoDBDatabase(name="ycsb", shardCluster = mongoDBCluster)
collectionYCSB = mongodb::MongoDBCollection(name="usertable", database = databaseYCSB)
keyYCSB = mongodb::MongoDBKey(name = "_id", valueString = "hashed", collection = collectionYCSB)

databaseYCSB2 = mongodb::MongoDBDatabase(name="ycsb-2", shardCluster = mongoDBCluster)
collectionYCSB2 = mongodb::MongoDBCollection(name="usertable", database = databaseYCSB2)
keyYCSB2 = mongodb::MongoDBKey(name = "_id", valueString = "hashed", collection = collectionYCSB2)

## POSTGRESQL 

pgNode1 = postgresql::PgpoolNode(host = vmPG1)
pgNode2 = postgresql::PgpoolNode(host = vmPG2)

pgMaster = postgresql::PgpoolMain(host = vmPG3, pgpoolNodes = [pgNode1, pgNode2])


##
ycsb = ycsb::YCSB(host=vmYCSB, mongodb = mongoDBCluster, mongodbConsistency = set1, postgresql = pgMaster, hbase = hbaseCluster, table="ycsb")
ycsb2 = ycsb::YCSB(host=vmYCSB2, mongodb = mongoDBCluster, mongodbConsistency = set1, postgresql = pgMaster, hbase = hbaseCluster, table="ycsb-2")
