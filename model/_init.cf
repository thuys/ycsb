entity YCSB extends ip::services::Server:
    """The general YCSB, single"""
    string directory = "/tmp/ycsb"
end

YCSB ycsb [0:] -- [0:1] mongodb::MongoDBShardCluster mongodb
YCSB ycsb [0:] -- [0:1] postgresql::PgpoolMain postgresql
YCSB ycsb [0:] -- [0:1] hbase::HBaseCluster hbase

implement YCSB using ycsb

implement YCSB using ycsb-mongodb when isset(self.mongodb) == true
implement YCSB using ycsb-postgresql when isset(self.postgresql) == true
implement YCSB using ycsb-hbase when isset(self.hbase) == true


implementation ycsb:
    git = std::Package(host = host, name = "git", state = "installed")
    
    maven = std::Package(host = host, name = "maven", state = "installed")
    
    basedir = std::Directory(host = host, path = directory, owner = "root", group = "mode", mode = 755, reload = true)
    configdir = std::Directory(host = host, path = directory +"/config", owner = "root", group = "mode", mode = 755, reload = true, requires = basedir)

    
    scriptFile = std::File(host = host, path = "/usr/bin/ycsb-install",owner = "root",
        group = "root", mode = 755,  content = template("ycsb/ycsb-install.sh.tmpl"), reload = true)
    
    serviceFile = std::File(host = host, path = "/lib/systemd/system/ycsb-install.service",owner = "root",
        group = "root", mode = 755,  content = file("ycsb/ycsb-install.service"), reload = true)
    
    service = std::Service(host = host, name = "ycsb-install", state = "running", onboot = false)
    service.requires = [git, maven, basedir, scriptFile, serviceFile]    
end

implementation ycsb-mongodb:
    mongoDB = mongodb::MongoDB(host = self.host)
    
    configFile= std::ConfigFile(host = host, path = directory +"/config/mongodb.conf", content = template("ycsb/mongodb.conf.tmpl"), reload = true)
    

end

implementation ycsb-postgresql:
    postgres = postgresql::PostgresqlBasic(host = self.host)
    
    wget = std::Package(host = host, name = "wget", state = "installed")
    
    configFile= std::ConfigFile(host = host, path = directory +"/config/postgresql.conf", content = template("ycsb/postgresql.conf.tmpl"), reload = true)

    scriptFile = std::File(host = host, path = "/usr/bin/ycsb-postgresql-jdbc-install",owner = "root",
        group = "root", mode = 755,  content = template("ycsb/ycsb-postgresql-jdbc-install.sh.tmpl"), reload = true)
    
    serviceFile = std::File(host = host, path = "/lib/systemd/system/ycsb-postgresql-jdbc-install.service",owner = "root",
        group = "root", mode = 755,  content = file("ycsb/ycsb-postgresql-jdbc-install.service"), reload = true)
    
    service = std::Service(host = host, name = "ycsb-postgresql-jdbc-install", state = "running", onboot = false)
    service.requires = [wget, scriptFile, serviceFile]    
    
    service.requires = std::Service[host = host, name = "ycsb-install"]
    
end

implementation ycsb-hbase:
    hbase = hbase::HBaseBasic(host = self.host)
    
    configFile= std::ConfigFile(host = host, path = directory +"/config/hbase.conf", content = template("ycsb/hbase.conf.tmpl"), reload = true)

    configFile2 = std::ConfigFile(host = host, path = directory +"/YCSB/hbase/src/main/conf/hbase-site.xml", 
                                  content = template("ycsb/hbase.conf.hbase-site.xml.tmpl"), reload = true)
    
end