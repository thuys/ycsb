#!/bin/bash
{% if mongodb.accessServers is defined %}
mkdir -p {{ directory }}/config/mongodb
rm -r -f {{ directory }}/config/mongodb/*
for host in {%for set in mongodb.replicaSets -%}
				{%for node in set.nodes -%}
	                {{ node.server.host.name }}
	                    {%- if not loop.last -%} 
	                        {{ ' '}} 
	                    {%- endif -%}
                 {%- endfor %}  {{ ' '}}
            {%- endfor %} {%for node in mongodb.singleNodes -%}
	                {{ node.server.host.name }}
	                    {%- if not loop.last -%} 
	                        {{ ' '}} 
	                    {%- endif -%}
                 {%- endfor %}; do
                 
	echo "<?xml version=\"1.0\"?>
	<events>
		<event id=\"Down\" startInMS=\"30000\">
			{{ directory }}/script/mongodb-remote-soft mongodb-dataserver stop $host
		</event>
		<event id=\"Up\" startInMS=\"60000\">
			{{ directory }}/script/mongodb-remote-soft mongodb-dataserver restart $host
		</event>
	</events>" > {{ directory }}/config/mongodb/mongodb-event-$host.xml;
	
	echo "<?xml version=\"1.0\"?>
	<events>
		<event id=\"Down\" startInMS=\"30000\">
			{{ directory }}/script/mongodb-remote-hard-stop mongodb KILL $host
		</event>
		<event id=\"Up\" startInMS=\"60000\">
			{{ directory }}/script/mongodb-remote-soft mongodb-dataserver restart $host
		</event>
	</events>" > {{ directory }}/config/mongodb/mongodb-event-$host-kill.xml;
	
	echo "<?xml version=\"1.0\"?>
	<events>
		<event id=\"Down\" startInMS=\"30000\">
			{{ directory }}/script/all-remote-network-stop $host
		</event>
		<event id=\"Up\" startInMS=\"60000\">
			{{ directory }}/script/all-remote-network-start $host
		</event>
	</events>" > {{ directory }}/config/mongodb/mongodb-event-$host-drop.xml;
	
done
{% endif %}